#BlueJ class context
comment0.params=
comment0.target=void\ testZeroBlue()
comment0.text=Method\ to\ test\ zeroBlue
comment1.params=
comment1.target=void\ testMirrorVertical()
comment1.text=Method\ to\ test\ mirrorVertical
comment2.params=
comment2.target=void\ testMirrorDiagonal()
comment3.params=
comment3.target=void\ testPosterize()
comment4.params=
comment4.target=void\ testMirrorTemple()
comment4.text=Method\ to\ test\ mirrorTemple
comment5.params=
comment5.target=void\ testCollage()
comment5.text=Method\ to\ test\ the\ collage\ method
comment6.params=
comment6.target=void\ testEdgeDetection()
comment6.text=Method\ to\ test\ edgeDetection
comment7.params=args
comment7.target=void\ main(java.lang.String[])
comment7.text=\r\n\r\n\ \ \ \ public\ static\ void\ testMirrorArms()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ Picture\ snowman\ \=\ new\ Picture("snowman.jpg");\r\n\ \ \ \ \ \ \ \ snowman.mirrorArms();\r\n\ \ \ \ \ \ \ \ snowman.explore();\r\n\ \ \ \ }\r\n\r\n\ \ \ \ public\ static\ void\ testKeepBlue()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ Picture\ beach\ \=\ new\ Picture("beach.jpg");\r\n\ \ \ \ \ \ \ \ beach.explore();\r\n\ \ \ \ \ \ \ \ beach.keepOnlyBlue();\r\n\ \ \ \ \ \ \ \ beach.explore();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ static\ void\ testNegate()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ Picture\ beach\ \=\ new\ Picture("beach.jpg");\r\n\ \ \ \ \ \ \ \ beach.explore();\r\n\ \ \ \ \ \ \ \ beach.negate();\r\n\ \ \ \ \ \ \ \ beach.explore();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ static\ void\ testGrayscale()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ Picture\ beach\ \=\ new\ Picture("beach.jpg");\r\n\ \ \ \ \ \ \ \ beach.explore();\r\n\ \ \ \ \ \ \ \ beach.grayscale();\r\n\ \ \ \ \ \ \ \ beach.explore();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ static\ void\ testSepia()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ Picture\ beach\ \=\ new\ Picture("beach.jpg");\r\n\ \ \ \ \ \ \ \ beach.explore();\r\n\ \ \ \ \ \ \ \ beach.sepia();\r\n\ \ \ \ \ \ \ \ beach.explore();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ static\ void\ testFixUnderwater()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ Picture\ underwater\ \=\ new\ Picture("water.jpg");\r\n\ \ \ \ \ \ \ \ underwater.explore();\r\n\ \ \ \ \ \ \ \ underwater.fixUnderwater();\r\n\ \ \ \ \ \ \ \ underwater.explore();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ static\ void\ testCropAndCopy()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ Picture\ beach\ \=\ new\ Picture("beach.jpg");\r\n\ \ \ \ \ \ \ \ Picture\ canvas\ \=\ new\ Picture(700,\ 500);\r\n\ \ \ \ \ \ \ \ beach.explore();\r\n\ \ \ \ \ \ \ \ canvas.cropAndCopy(beach,\ 340,\ 450,\ 60,\ 240,\ 15,\ 80);\r\n\ \ \ \ \ \ \ \ canvas.explore();\r\n\ \ \ \ }\r\n\r\n\ \ \ \ /**\ Main\ method\ for\ testing.\ \ Every\ class\ can\ have\ a\ main\r\nmethod\ in\ Java
numComments=8
